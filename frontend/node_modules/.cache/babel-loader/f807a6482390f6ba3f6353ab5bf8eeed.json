{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  signup(password, email) {\n    console.log(`${email}, ${password}`);\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  signin(password, username) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        password,\n        username\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n}\n\nconst auth = new Auth({\n  baseUrl: \"https://register.nomoreparties.co\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default auth;","map":{"version":3,"sources":["C:/Users/amyra/Desktop/Practicum100/react-around-auth/src/utils/auth.js"],"names":["Auth","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","signup","password","email","console","log","fetch","method","body","JSON","stringify","then","signin","username","auth"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,OAAxB;AACA,SAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;AACD;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAM;AAClB,QAAGA,GAAG,CAACC,EAAP,EAAW;AACT,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACD;;AAGDC,EAAAA,MAAM,CAAEC,QAAF,EAAYC,KAAZ,EAAoB;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,KAAID,QAAS,EAAlC;AACA,WAAOI,KAAK,CAAE,GAAE,KAAKhB,QAAS,SAAlB,EAA4B;AACtCiB,MAAAA,MAAM,EAAE,MAD8B;AAEtCd,MAAAA,OAAO,EAAE,KAAKD,QAFwB;AAGtCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAf;AAHgC,KAA5B,CAAL,CAKJQ,IALI,CAKChB,GAAG,IAAI,KAAKD,cAAL,CAAoBC,GAApB,CALR,CAAP;AAMD;;AAEDiB,EAAAA,MAAM,CAAEV,QAAF,EAAYW,QAAZ,EAAuB;AAC3B,WAAOP,KAAK,CAAE,GAAE,KAAKhB,QAAS,SAAlB,EAA4B;AACtCiB,MAAAA,MAAM,EAAE,MAD8B;AAEtCd,MAAAA,OAAO,EAAE,KAAKD,QAFwB;AAGtCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,QAAAA,QAAF;AAAYW,QAAAA;AAAZ,OAAf;AAHgC,KAA5B,CAAL,CAKJF,IALI,CAKChB,GAAG,IAAI,KAAKD,cAAL,CAAoBC,GAApB,CALR,CAAP;AAMD;;AA/BQ;;AAkCT,MAAMmB,IAAI,GAAG,IAAI3B,IAAJ,CAAS;AACpBI,EAAAA,OAAO,EAAE,mCADW;AAEpBE,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFW,CAAT,CAAb;AAOA,eAAeqB,IAAf","sourcesContent":["class Auth {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Error: ${res.status}`);\r\n  }\r\n\r\n\r\n  signup( password, email ) {\r\n    console.log(`${email}, ${password}`);\r\n    return fetch(`${this._baseUrl}/signup`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({ password, email }),\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }; \r\n\r\n  signin( password, username ) {\r\n    return fetch(`${this._baseUrl}/signin`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({ password, username }),\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }; \r\n}\r\n\r\n  const auth = new Auth({\r\n    baseUrl: \"https://register.nomoreparties.co\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }); \r\n  \r\n  export default auth;"]},"metadata":{},"sourceType":"module"}