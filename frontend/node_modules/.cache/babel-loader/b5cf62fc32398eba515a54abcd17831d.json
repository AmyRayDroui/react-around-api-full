{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  signup(username, password, email) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        email\n      })\n    }).then(response => {\n      try {\n        if (response.status === 200) {\n          return response.json();\n        }\n      } catch (e) {\n        return e;\n      }\n    }).catch(err => console.log(err));\n  }\n\n  signin(username, password, email) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        email\n      })\n    }).then(response => {\n      try {\n        if (response.status === 200) {\n          return response.json();\n        }\n      } catch (e) {\n        return e;\n      }\n    }).catch(err => console.log(err));\n  }\n\n}\n\nconst auth = new Auth({\n  baseUrl: \"https://register.nomoreparties.co/\",\n  headers: {\n    authorization: \"9b1558af-91ea-493b-ada9-7496ba6fa8e8\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default auth;","map":{"version":3,"sources":["C:/Users/amyra/Desktop/Practicum100/react-around-auth/src/utils/auth.js"],"names":["Auth","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","signup","username","password","email","fetch","method","Accept","body","JSON","stringify","then","response","e","catch","err","console","log","signin","auth","authorization"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,OAAxB;AACA,SAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;AACD;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAM;AAClB,QAAGA,GAAG,CAACC,EAAP,EAAW;AACT,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACD;;AAGDC,EAAAA,MAAM,CAACC,QAAD,EAAWC,QAAX,EAAqBC,KAArB,EAA4B;AAClC,WAAOC,KAAK,CAAE,GAAE,KAAKf,QAAS,SAAlB,EAA4B;AACtCgB,MAAAA,MAAM,EAAE,MAD8B;AAEtCb,MAAAA,OAAO,EAAE;AACPc,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAF6B;AAMtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,OAAf;AANgC,KAA5B,CAAL,CAQJO,IARI,CAQEC,QAAD,IAAc;AAClB,UAAI;AACF,YAAIA,QAAQ,CAACZ,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,iBAAOY,QAAQ,CAACf,IAAT,EAAP;AACD;AACF,OAJD,CAIE,OAAOgB,CAAP,EAAU;AACV,eAAOA,CAAP;AACD;AACF,KAhBI,EAiBJC,KAjBI,CAiBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBX,CAAP;AAkBD;;AAECG,EAAAA,MAAM,CAAChB,QAAD,EAAWC,QAAX,EAAqBC,KAArB,EAA4B;AAChC,WAAOC,KAAK,CAAE,GAAE,KAAKf,QAAS,SAAlB,EAA4B;AACtCgB,MAAAA,MAAM,EAAE,MAD8B;AAEtCb,MAAAA,OAAO,EAAE;AACPc,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAF6B;AAMtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,OAAf;AANgC,KAA5B,CAAL,CAQJO,IARI,CAQEC,QAAD,IAAc;AAClB,UAAI;AACF,YAAIA,QAAQ,CAACZ,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,iBAAOY,QAAQ,CAACf,IAAT,EAAP;AACD;AACF,OAJD,CAIE,OAAOgB,CAAP,EAAU;AACV,eAAOA,CAAP;AACD;AACF,KAhBI,EAiBJC,KAjBI,CAiBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBX,CAAP;AAkBD;;AAtDQ;;AAyDT,MAAMI,IAAI,GAAG,IAAIhC,IAAJ,CAAS;AACpBI,EAAAA,OAAO,EAAE,oCADW;AAEpBE,EAAAA,OAAO,EAAE;AACP2B,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFW,CAAT,CAAb;AAQA,eAAeD,IAAf","sourcesContent":["class Auth {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Error: ${res.status}`);\r\n  }\r\n\r\n\r\n  signup(username, password, email) {\r\n  return fetch(`${this._baseUrl}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ username, password, email }),\r\n  })\r\n    .then((response) => {\r\n      try {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n      } catch (e) {\r\n        return e;\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n}; \r\n\r\n  signin(username, password, email) {\r\n    return fetch(`${this._baseUrl}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ username, password, email }),\r\n    })\r\n      .then((response) => {\r\n        try {\r\n          if (response.status === 200) {\r\n            return response.json();\r\n          }\r\n        } catch (e) {\r\n          return e;\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }; \r\n}\r\n\r\n  const auth = new Auth({\r\n    baseUrl: \"https://register.nomoreparties.co/\",\r\n    headers: {\r\n      authorization: \"9b1558af-91ea-493b-ada9-7496ba6fa8e8\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }); \r\n  \r\n  export default auth;"]},"metadata":{},"sourceType":"module"}