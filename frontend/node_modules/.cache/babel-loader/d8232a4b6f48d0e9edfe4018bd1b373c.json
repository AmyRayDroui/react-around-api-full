{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  setToken(token) {\n    this._headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    };\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.info\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  toggleLike(cardId, addLike) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: addLike ? 'PUT' : 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://localhost:3000\",\n  headers: {\n    authorization: \"9b1558af-91ea-493b-ada9-7496ba6fa8e8\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/amyra/Desktop/Practicum100/react-around-api-full/frontend/src/utils/api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","setToken","token","getUserInfo","fetch","then","setUserInfo","data","method","body","JSON","stringify","name","about","info","setUserAvatar","avatar","link","getInitialCards","addNewCard","removeCard","cardId","toggleLike","addLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Error: ${res.status}`);\r\n  }\r\n\r\n  setToken(token) {\r\n    this._headers = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    }\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers\r\n    }).then(res => this._checkResponse(res));\r\n  }\r\n\r\n  setUserInfo(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.info\r\n      })\r\n    }).then(res => this._checkResponse(res));\r\n  }\r\n\r\n  setUserAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.link\r\n      })\r\n    }).then(res => this._checkResponse(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers\r\n    }).then(res => this._checkResponse(res));\r\n  }\r\n\r\n  addNewCard(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    }).then(res => this._checkResponse(res));\r\n  }\r\n\r\n  removeCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    }).then(res => this._checkResponse(res));\r\n  }\r\n\r\n  toggleLike(cardId, addLike) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: addLike ? 'PUT' : 'DELETE',\r\n      headers: this._headers\r\n    }).then(res => this._checkResponse(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://localhost:3000\",\r\n  headers: {\r\n    authorization: \"9b1558af-91ea-493b-ada9-7496ba6fa8e8\",\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n}); \r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}